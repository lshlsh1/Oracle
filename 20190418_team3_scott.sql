     SELECT MAX(STU_ID)
    FROM STUDENT
    WHERE STU_SSN = '123456-2123499';
    
    
    SELECT *
    FROM STUDENT;
    
DELETE
FROM REGISTER
WHERE STU_ID='S19_001';

DELETE
FROM SCORE
WHERE STU_ID='S19_001';

SELECT *
FROM SCORE;

SELECT *
FROM GIVEUP;

SELECT *
FROM REGISTER;

--수강신청 삭제를 할 때 ID로 못지움

DELETE
FROM REGISTER
WHERE REG_ID='RG19_111';

--수강신청삭제 프로시저


SELECT *
FROM OPENCOURSE;

DELETE
FROM SCORE
WHERE REG_ID='RG19_1111';

--수강신청 삭제 프로시저 만들기
EXEC PRC_REGISTER_DELETE('RG19_1114');


SELECT NVL2(MAX(GU_ID), '중도포기', NULL)
FROM GIVEUP
WHERE REG_ID='RG19_1121';

SELECT *
FROM GIVEUP;

EXEC PRO_GIVEUP_INSERT('S19_007');


DELETE
FROM DROPSTUDENT
WHERE MONTHS_BETWEEN(SYSDATE, DROP_DATE) > 12;

EXEC PRC_STUDENT_INSERT('이름','주민번호','전화번호');
EXEC PRC_STUDENT_INSERT('이일이','123456-2111112','010-1111-1111');
EXEC PRC_STUDENT_INSERT('테스트','123456-2111112','010-9999-9999');

EXEC PRC_DROPSTU_INSERT('S19_1002','이유테스트');

SELECT *
FROM STUDENT;

DELETE
FROM STUDENT
WHERE STU_ID='S19_015';

SELECT *
FROM DROPSTUDENT;


PRC_REGISTER_INSERT



EXEC PRC_STUDENT_INSERT('이일이','123456-2555555','010-1111-1111');
EXEC PRC_STUDENT_INSERT('이이이','123456-2666666','010-2222-2222');
EXEC PRC_STUDENT_INSERT('이삼이','123456-2777777','010-3333-3333');
EXEC PRC_STUDENT_INSERT('이사이','123456-2888888','010-4444-4444');

SELECT *
FROM STUDENT;

EXEC PRC_DROPSTU_INSERT('S19_0017','이유테스트');



--1.0 학생 데이터 입력
EXEC PRC_STUDENT_INSERT('이름','주민번호','전화번호');

--1.1 학생 데이터 입력 테스트
EXEC PRC_STUDENT_INSERT('이일이','123456-2111111','010-1111-1111');
EXEC PRC_STUDENT_INSERT('이이이','123456-2222222','010-2222-2222');
EXEC PRC_STUDENT_INSERT('이삼이','123456-2333333','010-3333-3333');
EXEC PRC_STUDENT_INSERT('이사이','123456-2444444','010-4444-4444');

--1.2 학생 주민번호 중복 데이터 입력 테스트 → 가입 불가
EXEC PRC_STUDENT_INSERT('테스트','123456-2111111','010-9999-9999');
--==>>ORA-20004: 이미 가입한 정보가 존재합니다


--1.3 탈퇴했다가 다시 가입하는경우 → ①STU_ID는 그대로, 정보 변경 ②DROPSTUDENT 에서 해당 STU_ID 레코드가 삭제됨
EXEC PRC_DROPSTU_INSERT('S19_0601','이유테스트'); -- 탈퇴시킴
EXEC PRC_STUDENT_INSERT('테스트','123456-2111111','010-9999-9999');
--==>> 학생의 정보변경됨
SELECT * FROM DROPSTUDENT WHERE STU_ID='S19_0601';
SELECT * FROM STUDENT WHERE STU_ID='S19_0601';
--S19_1002	테스트	123456-2111112	010-9999-9999

--2.0 등록된 학생 정보 수정
UPDATE STUDENT
SET STU_NAME = '변경할 이름', STU_SSN='변경할 주민번호',STU_TEL='변경할 주민번호'
WHERE STU_ID = '바꿀 대상 STU_ID';

--2.1 등록된 학생 정보 수정 데이터
UPDATE STUDENT
SET STU_NAME = '이일일', STU_SSN='123456-1111111',STU_TEL='010-0101-0101'
WHERE STU_ID = 'S19_0001';
UPDATE STUDENT
SET STU_NAME = '이이이', STU_SSN='123456-2222222',STU_TEL='010-0202-0202'
WHERE STU_ID = 'S19_0002';
UPDATE STUDENT
SET STU_NAME = '이삼삼', STU_SSN='123456-1333333',STU_TEL='010-0303-0303'
WHERE STU_ID = 'S19_0003';

--확인
SELECT * FROM STUDENT;

--3.0. 등록된 학생 삭제 (DROPSTUDENT 테이블로 이동)
EXEC PRC_DROPSTU_INSERT('STU_ID','탈퇴 이유');

--3.1. STU_ID는 등록 & REGISTER에 수강신청하지 않은 학생 → 삭제됨
EXEC PRC_DROPSTU_INSERT('S19_0602','수강신청X/삭제O');
EXEC PRC_DROPSTU_INSERT('S19_0991','수강신청X/삭제O');

--3.2. STU_ID를 등록 & REGISTER에 수강신청한 학생
--3.2.1 수강중인학생 → 삭제되지 않음(에러)
EXEC PRC_DROPSTU_INSERT('S19_0337','수강중/삭제X');
EXEC PRC_DROPSTU_INSERT('S19_0338','수강중/삭제X');

--3.2.2 수강중이지 않은 학생 → 삭제됨
--3.2.2.1 수강전인 학생 → 삭제됨
EXEC PRC_DROPSTU_INSERT('S19_0447','수강 예정/삭제O');

--3.2.2.2 수강이 끝난 학생 → 삭제됨
EXEC PRC_DROPSTU_INSERT('S19_0005','수강이 끝남/삭제O');

--조회
SELECT * FROM DROPSTUDENT;

--4.1 DROPSTUDENT 테이블에 있는 데이터 중 1년이 지난 자료 삭제 쿼리문
DELETE
FROM DROPSTUDENT
WHERE MONTHS_BETWEEN(SYSDATE, DROP_DATE) > 12;

--5.1 학생 정보 출력 - 이름, 과정명, 수강과목, 총점, 중도탈락
SELECT STU.STU_NAME"학생이름", CS.CS_NAME"과정명", SUB.SUB_NAME"과목명" , SC.ATTENDANCE + SC.PERFORMANCE + SC.WRITTEN "총점"
     , NVL2(GU.GU_DATE, '중도포기', NULL) "중도포기여부"
FROM REGISTER REG JOIN OPENSUBJECT OS   ON REG.OC_ID = OS.OC_ID
                  LEFT JOIN SCORE SC    ON (REG.REG_ID = SC.REG_ID AND OS.OS_ID = SC.OS_ID)
                  JOIN SUBJECT SUB      ON OS.SUB_ID = SUB.SUB_ID
                  JOIN OPENCOURSE OC    ON OS.OC_ID = OC.OC_ID
                  JOIN STUDENT STU      ON REG.STU_ID = STU.STU_ID
                  JOIN COURSE CS        ON OC.CS_ID = CS.CS_ID
                  LEFT JOIN GIVEUP GU   ON REG.REG_ID = GU.REG_ID;

--6.0 수강신청(홍비가 추가한부분 가능한 경우의수 UPDATE 필요)
EXEC PRC_REGISTER_INSERT('STU_ID','OC_ID(개설과정코드)');

--6.1 아직 시작되지 않은 과정에 수강신청 → 신청 성공
EXEC PRC_REGISTER_INSERT('S19_0601','OC19_024');

--6.2 이미 시작된 과정에 수강신청 → 신청 실패
EXEC PRC_REGISTER_INSERT('S19_0601','OC19_020');

--7.0 수강신청 취소
EXEC PRC_REGISTER_DELETE('REG_ID(수강신청코드)');

--7.1 수강신청 취소(신청한 과정이 시작하기 전에) → 취소성공
EXEC PRC_REGISTER_DELETE('RG19_0409');

--7.2 수강신청 취소(신청한 과정이 시작한 경우) → 취소불가
EXEC PRC_REGISTER_DELETE('RG19_0336');
--==>>ORA-20000: 과정이 이미 시작되었을 경우 수강신청을 삭제할 수 없습니다.

--8.0 중도탈락(희진)
EXEC PRO_GIVEUP_INSERT(중도탈락할학생코드);

--8.1 실행 가능 구문 (현재 수강중인 학생)
EXEC PRO_GIVEUP_INSERT('');

--8.2 실행 불가능 구문 (이미 수료한 학생이거나 아직 수업예정인 학생)
EXEC PRO_GIVEUP_INSERT('S19_001');
