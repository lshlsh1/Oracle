--■■■ 팀별 실습 과제 ■■■--

--HR 샘플 스키마 ERD를 이용한 테이블 재구성~!!!

-- 팀별로...HR 스키마에 있는 기본 테이블(7개)
-- COUNTRIES / DEPARTMENTS / EMPLOYEES / JOB_HISTORY / JOBS / LOCATIONS / REGIONS
-- 를 똑같이 구성한다

-- 단 생성하는 테이블의 이름은 『테이블명+팀번호』
-- COUNTRIES03 / DEPARTMENTS03 / EMPLOYEES03 / JOB_HISTORY03 / JOBS03 / LOCATIONS03 / REGIONS03

--과 같이 구성한다

--1.기존 테이블의 정보 수집
--2. 테이블 생성(컬럼 이름. 자료형, DEFAULT 표현식, NOT NULL등...)
--   제약조건 설정(PK, UK, FK, CK, ... NN)
--3. 작성 후 데이터 입력
--4. 제출 항목
--   20190405_01_hr_팀별실습과제_3조.sql
--   후기 3조.txt

SELECT *
FROM TAB;
--==>>
/*
BIN$e8M0LC8FScCiiwcdBi8sOA==$0	TABLE	
COUNTRIES	                    TABLE	
DEPARTMENTS                 	TABLE	
EMPLOYEES	                    TABLE	
EMP_DETAILS_VIEW	            VIEW	
JOBS	                        TABLE	
JOB_HISTORY	                    TABLE	
LOCATIONS	                    TABLE	
REGIONS	                        TABLE	
VIEW_CONSTCHECK	                VIEW	
*/

SELECT *
FROM COUNTRIES;

SELECT *
FROM CONTRIES;

/*
HR   DEPT_NAME_NN               DEPARTMENTS   C   DEPARTMENT_NAME   "DEPARTMENT_NAME" IS NOT NULL   
HR   DEPT_ID_PK                 DEPARTMENTS   P   DEPARTMENT_ID      
HR   DEPT_LOC_FK                DEPARTMENTS   R   LOCATION_ID      NO ACTION
HR   DEPT_MGR_FK                DEPARTMENTS   R   MANAGER_ID      NO ACTION
HR   EMP_LAST_NAME_NN           EMPLOYEES   C   LAST_NAME   "LAST_NAME" IS NOT NULL   
HR   EMP_EMAIL_NN               EMPLOYEES   C   EMAIL   "EMAIL" IS NOT NULL   
HR   EMP_HIRE_DATE_NN           EMPLOYEES   C   HIRE_DATE   "HIRE_DATE" IS NOT NULL   
HR   EMP_JOB_NN                 EMPLOYEES   C   JOB_ID   "JOB_ID" IS NOT NULL   
HR   EMP_SALARY_MIN             EMPLOYEES   C   SALARY   salary > 0   
HR   EMP_EMAIL_UK               EMPLOYEES   U   EMAIL      
HR   EMP_EMP_ID_PK              EMPLOYEES   P   EMPLOYEE_ID      
HR   EMP_DEPT_FK                EMPLOYEES   R   DEPARTMENT_ID      NO ACTION
HR   EMP_JOB_FK                 EMPLOYEES   R   JOB_ID      NO ACTION
HR   EMP_MANAGER_FK             EMPLOYEES   R   MANAGER_ID      NO ACTION
HR   JOB_TITLE_NN               JOBS   C   JOB_TITLE   "JOB_TITLE" IS NOT NULL   
HR   JOB_ID_PK                  JOBS   P   JOB_ID      
HR   JHIST_EMPLOYEE_NN          JOB_HISTORY   C   EMPLOYEE_ID   "EMPLOYEE_ID" IS NOT NULL   
HR   JHIST_START_DATE_NN        JOB_HISTORY   C   START_DATE   "START_DATE" IS NOT NULL   
HR   JHIST_END_DATE_NN          JOB_HISTORY   C   END_DATE   "END_DATE" IS NOT NULL   
HR   JHIST_JOB_NN               JOB_HISTORY   C   JOB_ID   "JOB_ID" IS NOT NULL   
HR   JHIST_DATE_INTERVAL        JOB_HISTORY   C   START_DATE   end_date > start_date   
HR   JHIST_DATE_INTERVAL        JOB_HISTORY   C   END_DATE   end_date > start_date   
HR   JHIST_EMP_ID_ST_DATE_PK    JOB_HISTORY   P   EMPLOYEE_ID      
HR   JHIST_EMP_ID_ST_DATE_PK    JOB_HISTORY   P   START_DATE      
HR   JHIST_JOB_FK               JOB_HISTORY   R   JOB_ID      NO ACTION
HR   JHIST_EMP_FK               JOB_HISTORY   R   EMPLOYEE_ID      NO ACTION
HR   JHIST_DEPT_FK              JOB_HISTORY   R   DEPARTMENT_ID      NO ACTION
HR   LOC_CITY_NN                LOCATIONS   C   CITY   "CITY" IS NOT NULL   
HR   LOC_ID_PK                  LOCATIONS   P   LOCATION_ID      
HR   LOC_C_ID_FK                LOCATIONS   R   COUNTRY_ID      NO ACTION
HR   REGION_ID_NN               REGIONS   C   REGION_ID   "REGION_ID" IS NOT NULL   
HR   REG_ID_PK                  REGIONS   P   REGION_ID      
*/

SELECT *
FROM LOCATIONS;

SELECT *
FROM LOCATIONS03;

SELECT *
FROM REGIONS03;


DESC LOCATIONS;
--==>>
/*
이름             널?       유형           
-------------- -------- ------------ 
LOCATION_ID    NOT NULL NUMBER(4)    
STREET_ADDRESS          VARCHAR2(40) 
POSTAL_CODE             VARCHAR2(12) 
CITY           NOT NULL VARCHAR2(30) 
STATE_PROVINCE          VARCHAR2(25) 
COUNTRY_ID              CHAR(2)     
*/

CREATE TABLE LOCATIONS03
( LOCATION_ID       NUMBER(4)       NOT NULL
, STREET_ADDRESS    VARCHAR2(40)
, POSTAL_CODE       VARCHAR2(12)
, CITY              VARCHAR2(30)    NOT NULL
, STATE_PROVIENCE   VARCHAR2(25)
, COUNTRY_ID        CHAR(2)
);
--==>Table LOCATIONS03이(가) 생성되었습니다.

INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1000, '1297 Via Cola di Rie', '00989', 'Roma', NULL, 'IT');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1100, '93091 Calle della Testa','10934','Venice',NULL,'IT');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1200, '2017 Shinjuku-ku','1689','Tokyo','Tokyo Prefecture','JP');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1300, '9450 Kamiya-cho','6823','Hiroshima',NULL,'JP');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1400, '2014 Jabberwocky Rd','26192','Southlake','Texas','US');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1500, '2011 Interiors Blvd','99236','South San Francisco','California','US');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1600, '2007 Zagora St','50090','South Brunswick','New Jersey','US');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1700, '2004 Charade Rd','98199','Seattle','Washington','US');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1800, '147 Spadina Ave','M5V 2L7', 'Toronto','Ontario','CA');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(1900, '6092 Boxwood St','YSW 9T2','Whitehorse','Yukon','CA');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2000, '40-5-12 Laogianggen','190518','Beijing',NULL,'CN');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2100, '1298 Vileparle (E)', '490231','Bombay','Maharashtra','IN');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2200, '12-98 Victoria Street','2901','Sydney','New South Wales','AU');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2300, '198 Clementi North','540198','Singapore',NULL,'SG');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2400, '8204 Arthur St',NULL,'London',NULL,'UK');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2500, 'Magdalen Centre, The Oxford Science Park','OX9 9ZB','Oxford','Oxford','UK');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2600, '9702 Chester Road','09629850293','Stretford','Manchester','UK');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2700, 'Schwanthalerstr. 7031','80925','Munich','Bavaria','DE');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2800, 'Rua Frei Caneca 1360', '01307-002','Sao paulo','Sao paulo','BR');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(2900, '20 Rue des Corps-Saints','1730','Geneva','Geneve','CH');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(3000, 'Murtenstrasse 921','3095','Bern','BE','CH');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(3100, 'Pieter Breughelstraat 837','3029SK','Utrecht','Utrecht','NL');
INSERT INTO LOCATIONS03(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVIENCE, COUNTRY_ID) VALUES
(3200, 'Mariano Escobedo 9991','11932','Mexico City','Distrito Federal','MX');

DELETE
FROM LOCATIONS03;

DESC REGIONS;
/*
이름          널?       유형           
----------- -------- ------------ 
REGION_ID   NOT NULL NUMBER       
REGION_NAME          VARCHAR2(25) 
*/
CREATE TABLE REGIONS03
( REGION_ID     NUMBER        
, REGION_NAME   VARCHAR2(25)
, CONSTRAINT REGION_ID_NN CHECK(REGION_ID IS NOT NULL)
);
--==>>Table REGIONS03이(가) 생성되었습니다.

SELECT *
FROM REGIONS;

INSERT INTO REGIONS03(REGION_ID, REGION_NAME) VALUES
(1,'Europe');
INSERT INTO REGIONS03(REGION_ID, REGION_NAME) VALUES
(2, 'Americas');
INSERT INTO REGIONS03(REGION_ID, REGION_NAME) VALUES
(3, 'Asia');
INSERT INTO REGIONS03(REGION_ID, REGION_NAME) VALUES
(4, 'Middle East and Africa');

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME IN('COUNTRIES','DEPARTMENTS','EMPLOYEES','JOB_HISTORY','JOBS','LOCATIONS','REGIONS');


SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME IN('LOCATIONS03','REGIONS03');








